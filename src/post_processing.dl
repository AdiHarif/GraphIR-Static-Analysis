
#include "type_inference.dl"
#include "arrays.dl"
#include "points_to.dl"
#include "symbol_list.dl"
#include "ir_type.dl"

.decl full_type(vertex: number, type: symbol)

full_type(v, @irTypeToString(source)) :-
    inferred_type(v, source), source != $Symbol().

full_type(v, cat("DynamicArray<", cat(element_type,">"))) :-
    inferred_type(v, $Array($Bottom())),
    may_refer_to(v, alloc),
    array_element_type(alloc, source_type),
    element_type = @irTypeToString(source_type).

full_type(v, cat("DynamicArray<", cat(element_type,">"))) :-
    inferred_type(v, $Array($Bottom())),
    may_refer_to(v, alloc),
    points_to(alloc, element, _),
    full_type(element, element_type).


.decl params_list(function_vertex: number, params: SymbolList, amount: number)

params_list(function_vertex, nil, 0) :-
    vertex(function_vertex, "Symbol", _, _),
    edge(function_vertex, _, _, "start").

params_list(function_vertex, @list_append(params, type), n + 1) :-
    params_list(function_vertex, params, n),
    edge(function_vertex, param_vertex, _, to_string(n)),
    full_type(param_vertex, type).

params_list(function_vertex, nil, 0) :-
    refers_to_function(function_vertex, _).

params_list(function_vertex, @list_append(params, full_type), n + 1) :-
    params_list(function_vertex, params, n),
    refers_to_function(function_vertex, function_name),
    function_parameters_type(function_name, to_string(n), type),
    full_type = @irTypeToString(type).

params_list(f, _, n1) <= params_list(f, _, n2) :- n1 < n2.

full_type(function_vertex, type) :-
    (
        vertex(function_vertex, _, _, function_name) ;
        refers_to_function(function_vertex, function_name)
    ),
    params_list(function_vertex, p_list, _),
    params = cat("[", cat(@list_join_by_string(p_list, ","), "]")),
    function_return_type(function_name, return_type),
    full_return_type = @irTypeToString(return_type),
    type = cat(params, cat("->", full_return_type)).

// TODO: replace this with something more robust
full_type(f, t1) <= full_type(f, t2) :- strlen(t1) < strlen(t2).

