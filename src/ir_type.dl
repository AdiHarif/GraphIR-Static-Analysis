
#pragma once

.type irTypeSet = [ hd: irType, tl: irTypeSet ]
.type irTypeList = [ hd: irType, tl: irTypeList ]

.type irType =
      Any {}
    | Array { element_type: irType }
    | Boolean {}
    | Bottom {}
    | Function { parameters: irTypeList, return_type: irType }
    | Number {}
    | String {}
    | Symbol {}
    | Tuple { element_types: irTypeList }
    | Void {}
    | Undefined {}
    | Union { types: irTypeSet }

.functor irTypeToString(t: irType): symbol stateful

.functor irTypeLub(t1: irType, t2: irType): irType stateful
.functor irTypeGlb(t1: irType, t2: irType): irType stateful

.lattice irType<> {
    Bottom -> $Bottom(),
    Lub -> @irTypeLub(_,_),
    Glb -> @irTypeGlb(_,_),
    Top -> $Any()
}
